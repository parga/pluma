{"version":3,"sources":["components/Header.tsx","hooks/useQuestions.tsx","components/Home.tsx","components/Question.tsx","components/Recommendations.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["messages","defineMessages","language","id","defaultMessage","spanish","english","Header","setLocale","locale","formatMessage","useIntl","className","href","src","aria-label","htmlFor","onChange","event","target","value","firstNameQuestion","firstNamePlaceholder","addressQuestion","addressPlaceholder","occupationQuestion","occupationEmployed","occupationSelfEmployed","occupationStudent","doYouHaveChildrenQuestion","childrenYes","childrenNo","howManyChildrenQuestion","emailQuestion","signIn","signInEmail","emailPlaceholder","continue","Home","userId","setUserId","history","useHistory","useState","url","setUrl","useEffect","window","localStorage","getItem","type","placeholder","onClick","push","navigate","disabled","previous","next","Question","question","label","inputField","input","Text","currentValue","Radio","options","onNext","validation","generatedProps","test","getErrorClass","map","option","i","checked","recommendationTitle","recommendationSubTitle","HEALTH_INSURANCE","HOME_CONTENT","PRIVATE_LIABILITY","MONTH","YEAR","getToken","params","a","axios","post","response","setItem","data","jwt","getRecommendations","token","get","headers","Authorization","Recommendations","completedProfile","setCompletedProfile","setToken","recommendations","setRecommendations","getRecommendationsCall","getTokenCall","firstName","address","occupation","numberOfChildren","Number","email","length","recommendation","price","amount","periodicity","Main","intl","questions","setFirstName","setAddress","setOccupation","children","setChildren","howMany","setHowMany","setEmail","useQuestions","exact","path","englishDictionary","spanishDictionary","App","setlocale","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a0e608.chunk.js","sourcesContent":["import React from \"react\";\nimport { defineMessages, useIntl } from \"react-intl\";\n\nconst messages = defineMessages({\n  language: {\n    id: \"Header.language\",\n    defaultMessage: \"Language:\",\n  },\n  spanish: {\n    id: \"Header.spanish\",\n    defaultMessage: \"Spanish\",\n  },\n  english: {\n    id: \"Header.english\",\n    defaultMessage: \"English\",\n  },\n});\n\ninterface HeaderProps {\n  setLocale: React.Dispatch<React.SetStateAction<string>>;\n  locale: string;\n}\n\nexport function Header({ setLocale, locale }: HeaderProps) {\n  const { formatMessage } = useIntl();\n  const handleOnChange = (event) => {\n    setLocale(event.target.value);\n  };\n  return (\n    <header className=\"header-container\">\n      <div className=\"header\">\n        <a className=\"logo\" href=\"/pluma\">\n          <img\n            src=\"https://feather-insurance.com/_next/static/media/logo.0d69221106425e5288907e514db23d99.svg\"\n            aria-label=\"Home\"\n          />\n          <div className=\"name\">\n            <h1 className=\"p-h1\">Pluma</h1>\n          </div>\n        </a>\n        <div className=\"language-selector-box\">\n          <label htmlFor=\"language-selector\">\n            {formatMessage(messages.language)}\n          </label>\n          <select\n            className=\"p-select\"\n            id=\"language-selector\"\n            onChange={handleOnChange}\n            value={locale}\n          >\n            <option value=\"es\">{formatMessage(messages.spanish)}</option>\n            <option value=\"en\">{formatMessage(messages.english)}</option>\n          </select>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { defineMessages, IntlShape } from \"react-intl\";\n\ninterface Input {\n  type: string;\n  options?: { label: string; value: string }[];\n  placeholder?: string;\n  currentValue: string;\n}\nexport interface Question {\n  id: string;\n  next?: string;\n  previous?: string;\n  question?: string;\n  input?: Input;\n  onChange?: (event: any) => void;\n  onNext?: () => void;\n  validation?: () => boolean;\n}\n\ninterface useQuestionsParams {\n  intl: IntlShape;\n  userId: string;\n}\n\nconst messages = defineMessages({\n  firstNameQuestion: {\n    id: \"App.firstNameQuestion\",\n    defaultMessage: `What's your fist name?`,\n  },\n  firstNamePlaceholder: {\n    id: \"App.firstNamePlaceholder\",\n    defaultMessage: `Your name here`,\n  },\n  addressQuestion: {\n    id: \"App.addressQuestion\",\n    defaultMessage: `What's your address?`,\n  },\n  addressPlaceholder: {\n    id: \"App.addressPlaceholder\",\n    defaultMessage: `Your address here`,\n  },\n  occupationQuestion: {\n    id: \"App.occupation\",\n    defaultMessage: `What's your occupation?`,\n  },\n  occupationEmployed: {\n    id: \"App.occupationEmployed\",\n    defaultMessage: `Employed`,\n  },\n  occupationSelfEmployed: {\n    id: \"App.occupationSelfEmployed\",\n    defaultMessage: `SelfEmployed`,\n  },\n  occupationStudent: {\n    id: \"App.occupationStudent\",\n    defaultMessage: `Student`,\n  },\n  doYouHaveChildrenQuestion: {\n    id: \"App.doYouHaveChildrenQuestion\",\n    defaultMessage: `Do you have children?`,\n  },\n  childrenYes: {\n    id: \"App.childrenYes\",\n    defaultMessage: `Yes`,\n  },\n  childrenNo: {\n    id: \"App.childrenNo\",\n    defaultMessage: `No`,\n  },\n\n  howManyChildrenQuestion: {\n    id: \"App.howManyChildrenQuestion\",\n    defaultMessage: `How many children do you have?`,\n  },\n  emailQuestion: {\n    id: \"App.emailQuestion\",\n    defaultMessage: `What's your email?`,\n  },\n});\n\n\nconst isEmail = (value) =>\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n    value\n  );\n\nexport function useQuestions({ intl, userId }: useQuestionsParams): Question[] {\n  const [firstName, setFirstName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [children, setChildren] = useState(\"\");\n  const [howMany, setHowMany] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const { formatMessage } = intl;\n\n  useEffect(() => {\n    setFirstName(window.localStorage.getItem(`${userId}:firstName`) || \"\");\n    setAddress(window.localStorage.getItem(`${userId}:address`) || \"\");\n    setOccupation(\n      window.localStorage.getItem(`${userId}:occupation`) || \"\"\n    );\n    setChildren(window.localStorage.getItem(`${userId}:children`) || \"\");\n    setHowMany(window.localStorage.getItem(`${userId}:howMany`) || \"\");\n    setEmail(window.localStorage.getItem(`${userId}:email`) || \"\");\n  }, [userId]);\n\n  return [\n    {\n      id: \"firstName\",\n      previous: \"/\",\n      next: \"address\",\n      input: {\n        type: \"text\",\n        placeholder: formatMessage(messages.firstNamePlaceholder),\n        currentValue: firstName,\n      },\n      question: formatMessage(messages.firstNameQuestion),\n      onChange: (event) => setFirstName(event.target.value),\n      onNext: () =>\n        window.localStorage.setItem(`${userId}:firstName`, firstName),\n      validation: () => !firstName,\n    },\n    {\n      id: \"address\",\n      previous: \"/\",\n      next: \"occupation\",\n      input: {\n        type: \"text\",\n        placeholder: formatMessage(messages.addressPlaceholder),\n        currentValue: address,\n      },\n      question: formatMessage(messages.addressQuestion),\n      onChange: (event) => setAddress(event.target.value),\n      onNext: () => window.localStorage.setItem(`${userId}:address`, address),\n      validation: () => !address,\n    },\n    {\n      id: \"occupation\",\n      previous: \"firstName\",\n      next: \"children\",\n      input: {\n        type: \"radio\",\n        options: [\n          {\n            label: formatMessage(messages.occupationEmployed),\n            value: \"EMPLOYED\",\n          },\n          {\n            label: formatMessage(messages.occupationSelfEmployed),\n            value: \"SELF_EMPLOYED\",\n          },\n          {\n            label: formatMessage(messages.occupationStudent),\n            value: \"STUDENT\",\n          },\n        ],\n        currentValue: occupation,\n      },\n      question: formatMessage(messages.occupationQuestion),\n      onChange: (event) => setOccupation(event.target.value),\n      onNext: () =>\n        window.localStorage.setItem(`${userId}:occupation`, occupation),\n      validation: () => !occupation,\n    },\n    {\n      id: \"children\",\n      previous: \"occupation\",\n      next: children === \"yes\" ? \"howMany\" : \"emailAddress\",\n      input: {\n        type: \"radio\",\n        options: [\n          {\n            label: formatMessage(messages.childrenYes),\n            value: \"yes\",\n          },\n          {\n            label: formatMessage(messages.childrenNo),\n            value: \"no\",\n          },\n        ],\n        currentValue: children,\n      },\n      question: formatMessage(messages.doYouHaveChildrenQuestion),\n      onChange: (event) => setChildren(event.target.value),\n      onNext: () => window.localStorage.setItem(`${userId}:children`, children),\n      validation: () => !children,\n    },\n    {\n      id: \"howMany\",\n      previous: \"children\",\n      next: \"emailAddress\",\n      input: {\n        type: \"text\",\n        placeholder: \"1\",\n        currentValue: howMany,\n      },\n      question: formatMessage(messages.howManyChildrenQuestion),\n      onChange: (event) => setHowMany(event.target.value),\n      onNext: () => window.localStorage.setItem(`${userId}:howMany`, howMany),\n      validation: () => !howMany,\n    },\n    {\n      id: \"emailAddress\",\n      previous: children === \"Yes\" ? \"howMany\" : \"children\",\n      next: \"recommendations\",\n      input: {\n        type: \"email\",\n        placeholder: \"jorge.parga@pluma.com\",\n        currentValue: email,\n      },\n      question: formatMessage(messages.emailQuestion),\n      onChange: (event) => setEmail(event.target.value),\n      onNext: () => {\n        window.localStorage.setItem(`${userId}:email`, email);\n        window.localStorage.setItem(`${userId}:completedProfile`, \"true\");\n      },\n      validation: () => !email || !isEmail(email),\n    },\n  ];\n}\n","import { useEffect, useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\nconst messages = defineMessages({\n  signIn: {\n    id: 'Home.signIn',\n    defaultMessage: 'Sign In',\n  },\n  signInEmail: {\n    id: 'Home.signInEmail',\n    defaultMessage: 'What is your sign-in email address?',\n  },\n  emailPlaceholder: {\n    id: 'Home.emailPlaceholder',\n    defaultMessage: 'Your email address'\n  },\n  continue: {\n    id: 'Home.continue',\n    defaultMessage: 'Continue',\n  },\n});\n\nexport function Home ({userId, setUserId}) {\n  const {formatMessage } = useIntl();\n  const history = useHistory();\n  const navigate = (url) => history.push(url);\n  const [url, setUrl] = useState(\"/firstName\");\n\n  useEffect(() => {\n    const token = window.localStorage.getItem(`${userId}:token`)\n    if(token) {\n      setUrl('/recommendations')\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"p-h1\">{formatMessage(messages.signIn)}</h1>\n      <div>\n        <label className=\"p-h4\" htmlFor=\"email\">{formatMessage(messages.signInEmail)}</label>\n        <input\n          id=\"email\"\n          className=\"p-input d-block mt8 wmx6\"\n          type=\"email\"\n          placeholder={formatMessage(messages.emailPlaceholder)}\n          value={userId}\n          onChange={(event) => setUserId(event.target.value)}\n        />\n        <button\n          className=\"p-btn p-btn--primary wmn3 mt16\"\n          onClick={() => navigate(url)}\n          disabled={!userId}\n        >\n          {formatMessage(messages.continue)}\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { ReactElement } from \"react\";\nimport { defineMessages, useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router-dom\";\nimport { Question as QuestionType } from \"../hooks/useQuestions\";\n\ninterface QuestionParams {\n  question: QuestionType;\n}\n\nconst messages = defineMessages({\n  previous: {\n    id: \"Question.previous\",\n    defaultMessage: \"< Previous\",\n  },\n  next: {\n    id: \"Question.next\",\n    defaultMessage: \"Next >\",\n  },\n});\n\nexport function Question({ question }: QuestionParams): ReactElement {\n  const { previous, next, question: label } = question;\n  const { formatMessage } = useIntl();\n  const history = useHistory();\n  const navigate = (url) => history.push(url);\n\n  const inputField =\n    question.input.type !== \"radio\" ? (\n      <Text\n        placeholder={question.input.placeholder}\n        onChange={question.onChange}\n        currentValue={question.input.currentValue}\n        type={question.input.type}\n        label={label}\n      />\n    ) : (\n      <Radio\n        options={question.input.options}\n        onChange={question.onChange}\n        currentValue={question.input.currentValue}\n        label={label}\n      />\n    );\n\n  return (\n    <div className=\"question\">\n      {inputField}\n      <div className=\"buttons\">\n        <button\n          className=\"p-btn p-btn--primary mt16 ws2\"\n          onClick={() => navigate(previous)}\n        >\n          {formatMessage(messages.previous)}\n        </button>\n        <button\n          className=\"p-btn--primary mt16 ws2\"\n          onClick={() => {\n            question.onNext();\n            navigate(next);\n          }}\n          disabled={question.validation()}\n        >\n          {formatMessage(messages.next)}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst isEmail = (value) =>\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n    value\n  );\n\nfunction Text({ placeholder, onChange, currentValue, type, label }) {\n  const getErrorClass = (currentValue) => {\n    return isEmail(currentValue) ? \"p-input\" : \"p-input--error\";\n  };\n\n  let generatedProps = {\n    className: `p-input d-block mt8 wmx6`,\n    type: \"\",\n  };\n\n  if (type === \"email\") {\n    generatedProps = {\n      type: \"email\",\n      className: `d-block mt8 wmx6 ${getErrorClass(currentValue)}`,\n    };\n  }\n\n  return (\n    <>\n      <label className=\"p-h4\" htmlFor={label}>\n        {label}\n      </label>\n      <input\n        id={label}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={currentValue}\n        {...generatedProps}\n      />\n    </>\n  );\n}\n\nfunction Radio({ options, onChange, currentValue, label }) {\n  return (\n    <>\n      <label className=\"p-h4\">{label}</label>\n      <div className=\"p-label-container mt8\">\n        {options.map((option, i) => (\n          <div key={i}>\n            <input\n              id={`default-${i}`}\n              className=\"p-radio\"\n              type=\"radio\"\n              value={option.value}\n              onChange={onChange}\n              checked={currentValue === option.value}\n            />\n            <label htmlFor={`default-${i}`} className=\"p-label\">\n              {option.label}\n            </label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { defineMessages, useIntl } from \"react-intl\";\n\nconst messages = defineMessages({\n  recommendationTitle: {\n    id: \"Recommendations.recommendationTitle\",\n    defaultMessage: \"We got your recommendations\",\n  },\n  recommendationSubTitle: {\n    id: \"Recommendations.recommendationSubTitle\",\n    defaultMessage:\n      \"Based on your answers, this is what make sense for you and what you should pay\",\n  },\n  HEALTH_INSURANCE: {\n    id: \"Recommendations.healthInsurance\",\n    defaultMessage: \"Health Insurance\",\n  },\n  HOME_CONTENT: {\n    id: \"Recommendations.homeContent\",\n    defaultMessage: \"Home Content\",\n  },\n  PRIVATE_LIABILITY: {\n    id: \"Recommendations.PRIVATE_LIABILITY\",\n    defaultMessage: \"Private Liability\",\n  },\n  MONTH: {\n    id: \"Recommendations.MONTH\",\n    defaultMessage: \" per month\",\n  },\n  YEAR: {\n    id: \"Recommendations.YEAR\",\n    defaultMessage: \"per year\",\n  },\n});\n\nasync function getToken(params, userId): Promise<string> {\n  let response;\n  try {\n    response = await axios.post(\n      \"https://challenge-dot-popsure-204813.appspot.com/user\",\n      params\n    );\n\n    window.localStorage.setItem(`${userId}:token`, response.data.jwt);\n  } catch (e) {\n    debugger;\n  }\n  return response?.data?.jwt;\n}\n\nasync function getRecommendations({token}): Promise<[]> {\n    let response;\n    try {\n        response = await axios.get('https://challenge-dot-popsure-204813.appspot.com/recommendation ', {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n    } catch (e) {\n\n    }\n    return response.data;\n};\n\nexport function Recommendations({userId}) {\n    const [completedProfile, setCompletedProfile] = useState('no');\n    const [token, setToken] = useState('');\n    const [recommendations, setRecommendations] = useState([])\n    const {formatMessage} = useIntl()\n\n    useEffect(() => {\n        setCompletedProfile(window.localStorage.getItem(`${userId}:completedProfile`));\n    }, [userId]);\n\n\n\n    useEffect(() => {\n        setToken(window.localStorage.getItem(`${userId}:token`));\n        async function getTokenCall(params, userId) {\n            setToken(await getToken(params, userId));\n        }\n\n        async function getRecommendationsCall({ token }) {\n          setRecommendations(await getRecommendations({ token }));\n        }\n\n        if(token) {\n            getRecommendationsCall({token});\n        }\n        if(completedProfile === 'true'){\n            const params = {\n                firstName : window.localStorage.getItem(`${userId}:firstName`),\n                address : window.localStorage.getItem(`${userId}:address`),\n                occupation: window.localStorage.getItem(`${userId}:occupation`),\n                numberOfChildren: Number(window.localStorage.getItem(`${userId}:howMany`)),\n                email: window.localStorage.getItem(`${userId}:email`)\n            };\n\n            getTokenCall(params, userId);\n        }\n    }, [completedProfile, userId, token])\n\n    return (\n      <>\n        {recommendations.length ? (\n          <div className=\"home-container ml8 mr8\">\n            <h1 className=\"p-h1\">\n              {formatMessage(messages.recommendationTitle)}\n            </h1>\n            <div>\n              <h4 className=\"p-h4 mb24\">\n                {formatMessage(messages.recommendationSubTitle)}\n              </h4>\n              {recommendations.map((recommendation, i) => (\n                <div key={i} className=\"recommendation mb24\">\n                  <h4 className=\"p-h4\">\n                    {formatMessage(messages[recommendation.type])}\n                  </h4>\n                  <div>\n                    {` $ ${recommendation.price.amount} ${formatMessage(\n                      messages[recommendation.price.periodicity]\n                    )}`}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"ds-spinner ds-spinner__l\" />\n        )}\n      </>\n    );\n}\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { useQuestions } from '../hooks/useQuestions';\nimport { Home } from './Home';\nimport { Question } from './Question';\nimport { Recommendations } from './Recommendations';\n\nexport function Main() {\n  const intl = useIntl();\n  const [userId, setUserId] = useState('');\n  const questions = useQuestions({ intl, userId });\n  const history = useHistory();\n  if(!userId) {\n    history.push('/');\n  }\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact={true} path=\"/\">\n          <Home userId={userId} setUserId={setUserId} />\n        </Route>\n        {questions.map((question, i) => (\n          <Route key={i} path={`/${question.id}`}>\n            <Question question={question} />\n          </Route>\n        ))}\n        <Route path=\"/recommendations\">\n          <Recommendations userId={userId} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport './App.css';\nimport '@popsure/dirty-swan/dist/index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {default as englishDictionary} from './__locales__/en.json';\nimport {default as spanishDictionary} from './__locales__/es.json';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\n\nconst messages = {\n  'en': englishDictionary,\n  'es': spanishDictionary\n}\n\n\nfunction App(): ReactElement {\n  const [locale, setlocale] = useState('en');\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      <Router basename=\"/pluma\">\n        <Header setLocale={setlocale} locale={locale}/>\n        <Main/>\n      </Router>\n    </IntlProvider>\n  );\n}\n\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header.tsx","hooks/useQuestions.tsx","components/Home.tsx","components/Question.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["messages","defineMessages","language","id","defaultMessage","spanish","english","Header","setLocale","locale","formatMessage","useIntl","className","src","aria-label","htmlFor","onChange","event","target","value","firstNameQuestion","occupationQuestion","doYouHaveChildrenQuestion","howManyChildrenQuestion","emailQuestion","Home","history","useHistory","onClick","url","push","previous","next","Question","question","label","navigate","Main","questions","intl","useQuestions","map","i","path","englishDictionary","spanishDictionary","App","useState","setlocale","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28bf9433.chunk.js","sourcesContent":["import React from \"react\";\nimport { defineMessages, useIntl } from \"react-intl\";\n\nconst messages = defineMessages({\n  language: {\n    id: \"Header.language\",\n    defaultMessage: \"Language:\",\n  },\n  spanish: {\n    id: \"Header.spanish\",\n    defaultMessage: \"Spanish\",\n  },\n  english: {\n    id: \"Header.english\",\n    defaultMessage: \"English\",\n  },\n});\n\ninterface HeaderProps {\n  setLocale: React.Dispatch<React.SetStateAction<string>>;\n  locale: string;\n}\n\nexport function Header({ setLocale, locale }: HeaderProps) {\n  const { formatMessage } = useIntl();\n  const handleOnChange = (event) => {\n    setLocale(event.target.value);\n  };\n  return (\n    <header className=\"App-header\">\n      <div className=\"logo\">\n        <img\n          src=\"https://feather-insurance.com/_next/static/media/logo.0d69221106425e5288907e514db23d99.svg\"\n          aria-label=\"Home\"\n        />\n        <div className=\"name\">\n          <h1>Pluma</h1>\n        </div>\n      </div>\n      <div className=\"language-selector-box\">\n        <label htmlFor=\"language-selector\">\n          {formatMessage(messages.language)}\n        </label>\n        <select\n          className=\"p-select\"\n          id=\"language-selector\"\n          onChange={handleOnChange}\n          value={locale}\n        >\n          <option value=\"es\">{formatMessage(messages.spanish)}</option>\n          <option value=\"en\">{formatMessage(messages.english)}</option>\n        </select>\n      </div>\n    </header>\n  );\n}\n","import {defineMessages, IntlShape} from 'react-intl';\n\nexport interface Question {\n  id: string;\n  next?: string;\n  previous?: string;\n  question?: string;\n}\n\ninterface useQuestionsParams {\n  intl: IntlShape\n}\n\nconst messages = defineMessages({\n  firstNameQuestion: {\n    id: 'App.firstNameQuestion',\n    defaultMessage: `What's your fist name?`\n  },\n  occupationQuestion: {\n    id: 'App.occupation',\n    defaultMessage: `What's your occupation?`\n  },\n  doYouHaveChildrenQuestion: {\n    id: 'App.doYouHaveChildrenQuestion',\n    defaultMessage: `Do you have children?`\n  },\n  howManyChildrenQuestion: {\n    id: 'App.howManyChildrenQuestion',\n    defaultMessage: `How many children do you have?`\n  },\n  emailQuestion: {\n    id: 'App.emailQuestion',\n    defaultMessage: `What's your email?`\n  }\n});\n\nexport function useQuestions({intl}: useQuestionsParams): Question[] {\n  const {formatMessage} = intl;\n  return  [\n    {\n      id: 'firstName',\n      previous: '/',\n      next: 'occupation',\n      question: formatMessage(messages.firstNameQuestion)\n    },\n    {\n      id: 'occupation',\n      previous: 'firstName',\n      next: 'children',\n      question: formatMessage(messages.occupationQuestion)\n    },\n    {\n      id: 'children',\n      previous: 'occupation',\n      next: 'howMany',\n      question: formatMessage(messages.doYouHaveChildrenQuestion)\n    },\n    {\n      id: 'howMany',\n      previous: 'children',\n      next: 'emailAddress',\n      question: formatMessage(messages.howManyChildrenQuestion)\n    },\n    {\n      id: 'emailAddress',\n      previous: 'howMany',\n      next: 'save',\n      question: formatMessage(messages.emailQuestion)\n    }\n  ];\n}\n","import { useHistory } from \"react-router-dom\";\n\nexport function Home () {\n  const history = useHistory();\n  const navigate = (url) => history.push(url);\n  return (<>\n    <button className='p-btn--primary' onClick={() => navigate(\"/firstName\")}>Let's start</button>\n  </>)\n}\n","import { ReactElement } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { Question as QuestionType } from '../hooks/useQuestions'\n\ninterface QuestionParams {\n  question: QuestionType\n}\n\nconst messages = defineMessages({\n    previous: {\n        id: 'Question.previous',\n        defaultMessage: '< Previous'\n    },\n    next: {\n        id: 'Question.next',\n        defaultMessage: 'Next >'\n    }\n})\n\nexport function Question ({question}: QuestionParams): ReactElement {\n  const {previous, next, question: label} = question;\n  const {formatMessage} = useIntl();\n  const history = useHistory();\n  const navigate = (url) => history.push(url);\n\n  return (\n    <div className=\"question\">\n      <div>{label}</div>\n      <div>\n        <button className='p-btn--primary' onClick={() => navigate(previous)}>{formatMessage(messages.previous)}</button>\n        <button className='p-btn--primary' onClick={() => navigate(next)}>{formatMessage(messages.next)}</button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Route, Switch } from 'react-router-dom';\nimport { useQuestions } from '../hooks/useQuestions';\nimport { Home } from './Home';\nimport { Question } from './Question';\n\nexport function Main() {\n  const intl = useIntl();\n  const questions = useQuestions({intl});\n  return (\n    <div className=\"App\">\n      <Switch>\n        {questions.map((question, i) =>(\n          <Route key={i} path={`/${question.id}`} >\n            <Question question={question} />\n          </Route>\n        ))}\n        <Route path=\"/\" >\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n","import React, { ReactElement, useState } from 'react';\nimport './App.css';\nimport '@popsure/dirty-swan/dist/index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {default as englishDictionary} from './__locales__/en.json';\nimport {default as spanishDictionary} from './__locales__/es.json';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\n\nconst messages = {\n  'en': englishDictionary,\n  'es': spanishDictionary\n}\n\n\nfunction App(): ReactElement {\n  const [locale, setlocale] = useState('en');\n  return (\n    <IntlProvider locale={locale} messages={messages[locale]}>\n      <Router basename=\"/pluma\">\n        <Header setLocale={setlocale} locale={locale}/>\n        <Main/>\n      </Router>\n    </IntlProvider>\n  );\n}\n\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}